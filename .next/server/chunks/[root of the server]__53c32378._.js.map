{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/otp.ts"],"sourcesContent":["const OTP_API_BASE = 'https://cpaas.messagecentral.com/verification/v3'\r\nconst AUTH_TOKEN = process.env.OTP_AUTH_TOKEN\r\nconst CUSTOMER_ID = process.env.OTP_CUSTOMER_ID\r\n\r\nexport async function sendOTP(phoneNumber: string): Promise<{\r\n  success: boolean\r\n  verificationId?: string\r\n  error?: string\r\n}> {\r\n  try {\r\n    const response = await fetch(\r\n      `${OTP_API_BASE}/send?countryCode=91&customerId=${CUSTOMER_ID}&flowType=SMS&mobileNumber=${phoneNumber}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'authToken': AUTH_TOKEN!\r\n        }\r\n      }\r\n    )\r\n\r\n    const data = await response.json()\r\n    \r\n    if (data.responseCode === 200) {\r\n      return {\r\n        success: true,\r\n        verificationId: data.data.verificationId\r\n      }\r\n    }\r\n    \r\n    return {\r\n      success: false,\r\n      error: data.message || 'Failed to send OTP'\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: 'Failed to send OTP'\r\n    }\r\n  }\r\n}\r\n\r\nexport async function verifyOTP(phoneNumber: string, verificationId: string, code: string): Promise<{\r\n  success: boolean\r\n  error?: string\r\n}> {\r\n  try {\r\n    const response = await fetch(\r\n      `${OTP_API_BASE}/validateOtp?countryCode=91&mobileNumber=${phoneNumber}&verificationId=${verificationId}&customerId=${CUSTOMER_ID}&code=${code}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'authToken': AUTH_TOKEN!\r\n        }\r\n      }\r\n    )\r\n\r\n    const data = await response.json()\r\n    \r\n    if (data.responseCode === 200 && data.data.verificationStatus === 'VERIFICATION_COMPLETED') {\r\n      return {\r\n        success: true\r\n      }\r\n    }\r\n    \r\n    return {\r\n      success: false,\r\n      error: data.message || 'Invalid OTP'\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: 'Failed to verify OTP'\r\n    }\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA,MAAM,eAAe;AACrB,MAAM,aAAa,QAAQ,GAAG,CAAC,cAAc;AAC7C,MAAM,cAAc,QAAQ,GAAG,CAAC,eAAe;AAExC,eAAe,QAAQ,WAAmB;IAK/C,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,GAAG,aAAa,gCAAgC,EAAE,YAAY,2BAA2B,EAAE,aAAa,EACxG;YACE,QAAQ;YACR,SAAS;gBACP,aAAa;YACf;QACF;QAGF,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,YAAY,KAAK,KAAK;YAC7B,OAAO;gBACL,SAAS;gBACT,gBAAgB,KAAK,IAAI,CAAC,cAAc;YAC1C;QACF;QAEA,OAAO;YACL,SAAS;YACT,OAAO,KAAK,OAAO,IAAI;QACzB;IACF,EAAE,OAAO,OAAO;QACd,OAAO;YACL,SAAS;YACT,OAAO;QACT;IACF;AACF;AAEO,eAAe,UAAU,WAAmB,EAAE,cAAsB,EAAE,IAAY;IAIvF,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,GAAG,aAAa,yCAAyC,EAAE,YAAY,gBAAgB,EAAE,eAAe,YAAY,EAAE,YAAY,MAAM,EAAE,MAAM,EAChJ;YACE,QAAQ;YACR,SAAS;gBACP,aAAa;YACf;QACF;QAGF,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,YAAY,KAAK,OAAO,KAAK,IAAI,CAAC,kBAAkB,KAAK,0BAA0B;YAC1F,OAAO;gBACL,SAAS;YACX;QACF;QAEA,OAAO;YACL,SAAS;YACT,OAAO,KAAK,OAAO,IAAI;QACzB;IACF,EAAE,OAAO,OAAO;QACd,OAAO;YACL,SAAS;YACT,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\nconst supabaseKey = process.env.SUPABASE_SERVICE_KEY!\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\nexport interface User {\r\n  id: string\r\n  name: string\r\n  college: string\r\n  email: string\r\n  phone: string\r\n  alt_phone?: string\r\n  password: string\r\n  created_at: string\r\n}\r\n\r\nexport async function createUser(userData: Omit<User, 'id' | 'created_at'>): Promise<User | null> {\r\n  const { data, error } = await supabase\r\n    .from('users')\r\n    .insert([userData])\r\n    .select()\r\n    .single()\r\n  \r\n  if (error) {\r\n    console.error('Error creating user:', error)\r\n    return null\r\n  }\r\n  \r\n  return data\r\n}\r\n\r\nexport async function getUserByPhone(phone: string): Promise<User | null> {\r\n  const { data, error } = await supabase\r\n    .from('users')\r\n    .select()\r\n    .eq('phone', phone)\r\n    .single()\r\n  \r\n  if (error) {\r\n    console.error('Error fetching user:', error)\r\n    return null\r\n  }\r\n  \r\n  return data\r\n}\r\n\r\nexport async function getUserById(id: string): Promise<User | null> {\r\n  const { data, error } = await supabase\r\n    .from('users')\r\n    .select()\r\n    .eq('id', id)\r\n    .single()\r\n  \r\n  if (error) {\r\n    console.error('Error fetching user:', error)\r\n    return null\r\n  }\r\n  \r\n  return data\r\n} "],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM;AACN,MAAM,cAAc,QAAQ,GAAG,CAAC,oBAAoB;AAE7C,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAa3C,eAAe,WAAW,QAAyC;IACxE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC;QAAC;KAAS,EACjB,MAAM,GACN,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;IAEA,OAAO;AACT;AAEO,eAAe,eAAe,KAAa;IAChD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,GACN,EAAE,CAAC,SAAS,OACZ,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;IAEA,OAAO;AACT;AAEO,eAAe,YAAY,EAAU;IAC1C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,GACN,EAAE,CAAC,MAAM,IACT,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/auth.ts"],"sourcesContent":["import { SignJWT, jwtVerify } from 'jose'\r\nimport { cookies } from 'next/headers'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key'\r\n\r\n// Cookie settings\r\nconst COOKIE_OPTIONS = {\r\n  httpOnly: true,\r\n  secure: process.env.NODE_ENV === 'production',\r\n  sameSite: 'lax' as const,\r\n  maxAge: 60 * 60 * 24 * 7 // 7 days\r\n}\r\n\r\nexport async function hashPassword(password: string): Promise<string> {\r\n  const salt = await bcrypt.genSalt(10)\r\n  return bcrypt.hash(password, salt)\r\n}\r\n\r\nexport async function comparePasswords(password: string, hashedPassword: string): Promise<boolean> {\r\n  return bcrypt.compare(password, hashedPassword)\r\n}\r\n\r\nexport async function createSession(userId: string): Promise<string> {\r\n  const token = await new SignJWT({ userId })\r\n    .setProtectedHeader({ alg: 'HS256' })\r\n    .setExpirationTime('7d') // Match cookie maxAge\r\n    .sign(new TextEncoder().encode(JWT_SECRET))\r\n  \r\n  return token\r\n}\r\n\r\nexport async function verifySession(token: string): Promise<string | null> {\r\n  try {\r\n    const verified = await jwtVerify(token, new TextEncoder().encode(JWT_SECRET))\r\n    return verified.payload.userId as string\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function setSessionCookie(token: string) {\r\n  const cookieStore = await cookies()\r\n  cookieStore.set('session', token, COOKIE_OPTIONS)\r\n}\r\n\r\nexport async function getSessionToken(): Promise<string | undefined> {\r\n  const cookieStore = await cookies()\r\n  return cookieStore.get('session')?.value\r\n}\r\n\r\nexport async function clearSession() {\r\n  const cookieStore = await cookies()\r\n  cookieStore.delete('session')\r\n}\r\n\r\nexport async function requireAuth() {\r\n  const token = await getSessionToken()\r\n  if (!token) {\r\n    throw new Error('Unauthorized')\r\n  }\r\n  \r\n  const userId = await verifySession(token)\r\n  if (!userId) {\r\n    throw new Error('Invalid session')\r\n  }\r\n  \r\n  return userId\r\n} "],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAE7C,kBAAkB;AAClB,MAAM,iBAAiB;IACrB,UAAU;IACV,QAAQ,oDAAyB;IACjC,UAAU;IACV,QAAQ,KAAK,KAAK,KAAK,EAAE,SAAS;AACpC;AAEO,eAAe,aAAa,QAAgB;IACjD,MAAM,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC;IAClC,OAAO,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;AAC/B;AAEO,eAAe,iBAAiB,QAAgB,EAAE,cAAsB;IAC7E,OAAO,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU;AAClC;AAEO,eAAe,cAAc,MAAc;IAChD,MAAM,QAAQ,MAAM,IAAI,uJAAA,CAAA,UAAO,CAAC;QAAE;IAAO,GACtC,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAClC,iBAAiB,CAAC,MAAM,sBAAsB;KAC9C,IAAI,CAAC,IAAI,cAAc,MAAM,CAAC;IAEjC,OAAO;AACT;AAEO,eAAe,cAAc,KAAa;IAC/C,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI,cAAc,MAAM,CAAC;QACjE,OAAO,SAAS,OAAO,CAAC,MAAM;IAChC,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,eAAe,iBAAiB,KAAa;IAClD,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,YAAY,GAAG,CAAC,WAAW,OAAO;AACpC;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,OAAO,YAAY,GAAG,CAAC,YAAY;AACrC;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,YAAY,MAAM,CAAC;AACrB;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM;IACpB,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,SAAS,MAAM,cAAc;IACnC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/app/api/auth/verify-otp/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { cookies } from 'next/headers'\r\nimport { verifyOTP } from '@/utils/otp'\r\nimport { createUser } from '@/utils/supabase'\r\nimport { createSession } from '@/utils/auth'\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json()\r\n    const { verificationId, code, phone, redirectPath } = body\r\n\r\n    if (!verificationId || !code || !phone) {\r\n      return NextResponse.json(\r\n        { error: 'Missing required fields' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // Verify OTP\r\n    const verifyResult = await verifyOTP(phone, verificationId, code)\r\n    if (!verifyResult.success) {\r\n      return NextResponse.json(\r\n        { error: verifyResult.error },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // Get pending registration data from cookies\r\n    const cookieStore = await cookies()\r\n    const pendingRegistrationValue = cookieStore.get('pending_registration')?.value\r\n    \r\n    if (!pendingRegistrationValue) {\r\n      return NextResponse.json(\r\n        { error: 'Registration session expired' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // Parse user data from cookie\r\n    const userData = JSON.parse(pendingRegistrationValue)\r\n    \r\n    // Create user in database\r\n    const user = await createUser(userData)\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Failed to create user' },\r\n        { status: 500 }\r\n      )\r\n    }\r\n\r\n    // Create session\r\n    const token = await createSession(user.id)\r\n\r\n    // Create response and set cookies in one go\r\n    return new NextResponse(\r\n      JSON.stringify({ \r\n        success: true,\r\n        redirectPath: redirectPath || '/dashboard' // Include the redirect path in response\r\n      }), \r\n      {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Set-Cookie': [\r\n            `session=${token}; HttpOnly; Path=/; Max-Age=${60 * 60 * 24}; ${process.env.NODE_ENV === 'production' ? 'Secure; ' : ''}SameSite=Lax`,\r\n            'pending_registration=; HttpOnly; Path=/; Max-Age=0; SameSite=Lax' // Clear the registration cookie\r\n          ].join(', ')\r\n        }\r\n      }\r\n    )\r\n  } catch (error) {\r\n    console.error('OTP verification error:', error)\r\n    return NextResponse.json(\r\n      { error: 'Verification failed' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG;QAEtD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO;YACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,aAAa;QACb,MAAM,eAAe,MAAM,CAAA,GAAA,8GAAA,CAAA,YAAS,AAAD,EAAE,OAAO,gBAAgB;QAC5D,IAAI,CAAC,aAAa,OAAO,EAAE;YACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,aAAa,KAAK;YAAC,GAC5B;gBAAE,QAAQ;YAAI;QAElB;QAEA,6CAA6C;QAC7C,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;QAChC,MAAM,2BAA2B,YAAY,GAAG,CAAC,yBAAyB;QAE1E,IAAI,CAAC,0BAA0B;YAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+B,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,8BAA8B;QAC9B,MAAM,WAAW,KAAK,KAAK,CAAC;QAE5B,0BAA0B;QAC1B,MAAM,OAAO,MAAM,CAAA,GAAA,mHAAA,CAAA,aAAU,AAAD,EAAE;QAC9B,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,iBAAiB;QACjB,MAAM,QAAQ,MAAM,CAAA,GAAA,+GAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,EAAE;QAEzC,4CAA4C;QAC5C,OAAO,IAAI,gIAAA,CAAA,eAAY,CACrB,KAAK,SAAS,CAAC;YACb,SAAS;YACT,cAAc,gBAAgB,aAAa,wCAAwC;QACrF,IACA;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,cAAc;oBACZ,CAAC,QAAQ,EAAE,MAAM,4BAA4B,EAAE,KAAK,KAAK,GAAG,EAAE,EAAE,6EAAqD,GAAG,YAAY,CAAC;oBACrI,mEAAmE,gCAAgC;iBACpG,CAAC,IAAI,CAAC;YACT;QACF;IAEJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAsB,GAC/B;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}