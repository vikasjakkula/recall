{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/auth.ts"],"sourcesContent":["import { SignJWT, jwtVerify } from 'jose'\r\nimport { cookies } from 'next/headers'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key'\r\n\r\n// Cookie settings\r\nconst COOKIE_OPTIONS = {\r\n  httpOnly: true,\r\n  secure: process.env.NODE_ENV === 'production',\r\n  sameSite: 'lax' as const,\r\n  maxAge: 60 * 60 * 24 * 7 // 7 days\r\n}\r\n\r\nexport async function hashPassword(password: string): Promise<string> {\r\n  const salt = await bcrypt.genSalt(10)\r\n  return bcrypt.hash(password, salt)\r\n}\r\n\r\nexport async function comparePasswords(password: string, hashedPassword: string): Promise<boolean> {\r\n  return bcrypt.compare(password, hashedPassword)\r\n}\r\n\r\nexport async function createSession(userId: string): Promise<string> {\r\n  const token = await new SignJWT({ userId })\r\n    .setProtectedHeader({ alg: 'HS256' })\r\n    .setExpirationTime('7d') // Match cookie maxAge\r\n    .sign(new TextEncoder().encode(JWT_SECRET))\r\n  \r\n  return token\r\n}\r\n\r\nexport async function verifySession(token: string): Promise<string | null> {\r\n  try {\r\n    const verified = await jwtVerify(token, new TextEncoder().encode(JWT_SECRET))\r\n    return verified.payload.userId as string\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function setSessionCookie(token: string) {\r\n  const cookieStore = await cookies()\r\n  cookieStore.set('session', token, COOKIE_OPTIONS)\r\n}\r\n\r\nexport async function getSessionToken(): Promise<string | undefined> {\r\n  const cookieStore = await cookies()\r\n  return cookieStore.get('session')?.value\r\n}\r\n\r\nexport async function clearSession() {\r\n  const cookieStore = await cookies()\r\n  cookieStore.delete('session')\r\n}\r\n\r\nexport async function requireAuth() {\r\n  const token = await getSessionToken()\r\n  if (!token) {\r\n    throw new Error('Unauthorized')\r\n  }\r\n  \r\n  const userId = await verifySession(token)\r\n  if (!userId) {\r\n    throw new Error('Invalid session')\r\n  }\r\n  \r\n  return userId\r\n} "],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAE7C,kBAAkB;AAClB,MAAM,iBAAiB;IACrB,UAAU;IACV,QAAQ,oDAAyB;IACjC,UAAU;IACV,QAAQ,KAAK,KAAK,KAAK,EAAE,SAAS;AACpC;AAEO,eAAe,aAAa,QAAgB;IACjD,MAAM,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC;IAClC,OAAO,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;AAC/B;AAEO,eAAe,iBAAiB,QAAgB,EAAE,cAAsB;IAC7E,OAAO,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU;AAClC;AAEO,eAAe,cAAc,MAAc;IAChD,MAAM,QAAQ,MAAM,IAAI,uJAAA,CAAA,UAAO,CAAC;QAAE;IAAO,GACtC,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAClC,iBAAiB,CAAC,MAAM,sBAAsB;KAC9C,IAAI,CAAC,IAAI,cAAc,MAAM,CAAC;IAEjC,OAAO;AACT;AAEO,eAAe,cAAc,KAAa;IAC/C,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI,cAAc,MAAM,CAAC;QACjE,OAAO,SAAS,OAAO,CAAC,MAAM;IAChC,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,eAAe,iBAAiB,KAAa;IAClD,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,YAAY,GAAG,CAAC,WAAW,OAAO;AACpC;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,OAAO,YAAY,GAAG,CAAC,YAAY;AACrC;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,YAAY,MAAM,CAAC;AACrB;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM;IACpB,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,SAAS,MAAM,cAAc;IACnC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/supabase/server.ts"],"sourcesContent":["import { createClient as createSupabaseClient } from '@supabase/supabase-js'\r\n\r\nexport function createClient() {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\n  const supabaseServiceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\r\n\r\n  if (!supabaseUrl || !supabaseServiceRoleKey) {\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n\r\n  return createSupabaseClient(supabaseUrl, supabaseServiceRoleKey)\r\n} "],"names":[],"mappings":";;;AAAA;;AAEO,SAAS;IACd,MAAM;IACN,MAAM,yBAAyB,QAAQ,GAAG,CAAC,yBAAyB;IAEpE,IAAI,CAAC,eAAe,CAAC,wBAAwB;QAC3C,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAoB,AAAD,EAAE,aAAa;AAC3C","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/app/api/auth/user/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { requireAuth } from '@/utils/auth'\r\nimport { createClient } from '@/utils/supabase/server'\r\n\r\nexport async function GET() {\r\n  try {\r\n    // Verify user is authenticated\r\n    const userId = await requireAuth()\r\n\r\n    // Get user details from database\r\n    const supabase = createClient()\r\n    const { data: user, error } = await supabase\r\n      .from('users')\r\n      .select('id, name, phone, email')\r\n      .eq('id', userId)\r\n      .single()\r\n\r\n    if (error || !user) {\r\n      return NextResponse.json(\r\n        { error: 'User not found' },\r\n        { status: 404 }\r\n      )\r\n    }\r\n\r\n    return NextResponse.json(user)\r\n  } catch (error) {\r\n    console.error('Get user error:', error)\r\n    return NextResponse.json(\r\n      { error: 'Failed to get user details' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,+BAA+B;QAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,+GAAA,CAAA,cAAW,AAAD;QAE/B,iCAAiC;QACjC,MAAM,WAAW,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;QAC5B,MAAM,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACjC,IAAI,CAAC,SACL,MAAM,CAAC,0BACP,EAAE,CAAC,MAAM,QACT,MAAM;QAET,IAAI,SAAS,CAAC,MAAM;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiB,GAC1B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}