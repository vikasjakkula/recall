{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_4617584a.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_4617584a-module__PibPIa__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_4617584a.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22page.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/supabase/client.ts"],"sourcesContent":["import { createClient as createSupabaseClient } from '@supabase/supabase-js'\r\n\r\nexport const createClient = () => {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\n  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\r\n\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n\r\n  return createSupabaseClient(supabaseUrl, supabaseKey)\r\n} "],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,eAAe;IAC1B,MAAM;IACN,MAAM;IAEN,uCAAkC;;IAElC;IAEA,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAoB,AAAD,EAAE,aAAa;AAC3C","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/test.ts"],"sourcesContent":["import { createClient } from '@/utils/supabase/client';\r\nimport { TestData, Test, Section, Question } from '@/types/test';\r\n\r\nexport async function getTestData(testId: number): Promise<TestData> {\r\n  const supabase = createClient();\r\n\r\n  // Fetch test details\r\n  const { data: test, error: testError } = await supabase\r\n    .from('tests')\r\n    .select('*')\r\n    .eq('test_id', testId)\r\n    .single();\r\n\r\n  if (testError) throw testError;\r\n\r\n  // Fetch sections\r\n  const { data: sections, error: sectionsError } = await supabase\r\n    .from('sections')\r\n    .select('*')\r\n    .eq('test_id', testId);\r\n\r\n  if (sectionsError) throw sectionsError;\r\n\r\n  // Fetch questions for all sections\r\n  const sectionIds = sections.map(s => s.section_id);\r\n  const { data: questions, error: questionsError } = await supabase\r\n    .from('questions')\r\n    .select('*')\r\n    .in('section_id', sectionIds);\r\n\r\n  if (questionsError) throw questionsError;\r\n\r\n  // Group and number questions by section\r\n  const orderedQuestions = questions.reduce((acc: Question[], question) => {\r\n    const sectionName = question.section_id.split('_')[2].toLowerCase();\r\n    const baseNumber = sectionName === 'maths' ? 0 :\r\n                      sectionName === 'physics' ? 80 :\r\n                      sectionName === 'chemistry' ? 120 : 0;\r\n    \r\n    // Adjust question numbers based on section\r\n    // question.question_number is 1-based within each section\r\n    const questionNumber = baseNumber + question.question_number;\r\n\r\n    acc.push({\r\n      ...question,\r\n      question_number: questionNumber\r\n    });\r\n    return acc;\r\n  }, []);\r\n\r\n  // Sort questions by their new question numbers\r\n  orderedQuestions.sort((a, b) => a.question_number - b.question_number);\r\n\r\n  // Calculate section instructions\r\n  const sectionInstructions = sections.map(section => {\r\n    const sectionName = section.section_name.toLowerCase();\r\n    let questionCount = 0;\r\n    \r\n    switch (sectionName) {\r\n      case 'maths':\r\n        questionCount = 80;\r\n        break;\r\n      case 'physics':\r\n      case 'chemistry':\r\n        questionCount = 40;\r\n        break;\r\n      default:\r\n        questionCount = questions.filter(q => q.section_id === section.section_id).length;\r\n    }\r\n\r\n    return {\r\n      name: section.section_name,\r\n      questions: questionCount\r\n    };\r\n  });\r\n\r\n  return {\r\n    test,\r\n    sections,\r\n    questions: orderedQuestions,\r\n    instructions: {\r\n      duration: 180, // 3 hours in minutes\r\n      sectionInstructions\r\n    }\r\n  };\r\n}\r\n\r\nexport function getQuestionsBySection(questions: Question[], sectionName: string): Question[] {\r\n  return questions.filter(q => {\r\n    const section = q.section_id.split('_')[1]; // Extract section name from section_id\r\n    return section.toLowerCase() === sectionName.toLowerCase();\r\n  });\r\n}\r\n\r\nexport function getQuestionNumber(question: Question): number {\r\n  return question.question_number;\r\n}\r\n\r\nexport function getQuestionOptions(question: Question): { id: string; content: string }[] {\r\n  const options = [\r\n    { id: 'a', content: question.option_a },\r\n    { id: 'b', content: question.option_b },\r\n    { id: 'c', content: question.option_c },\r\n    { id: 'd', content: question.option_d }\r\n  ];\r\n\r\n  if (question.option_e) {\r\n    options.push({ id: 'e', content: question.option_e });\r\n  }\r\n\r\n  if (question.option_f) {\r\n    options.push({ id: 'f', content: question.option_f });\r\n  }\r\n\r\n  return options;\r\n}\r\n\r\nexport async function submitTest(\r\n  testId: number,\r\n  answers: Record<number, string>,\r\n  timeTaken: number,\r\n  userId: string\r\n): Promise<TestResult> {\r\n  try {\r\n    const response = await fetch('/api/test/submit', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        testId,\r\n        answers,\r\n        timeTaken\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.error || 'Failed to submit test');\r\n    }\r\n\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error submitting test:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction evaluateTest(\r\n  answers: Record<number, string>,\r\n  questions: Question[]\r\n): Omit<TestResult, 'result_id' | 'user_id' | 'test_id' | 'submitted_at' | 'time_taken' | 'answers'> {\r\n  const sectionAnalysis = {\r\n    maths: { correct: 0, wrong: 0, unattempted: 0, marks: 0 },\r\n    physics: { correct: 0, wrong: 0, unattempted: 0, marks: 0 },\r\n    chemistry: { correct: 0, wrong: 0, unattempted: 0, marks: 0 }\r\n  };\r\n  \r\n  let totalCorrect = 0;\r\n  let totalWrong = 0;\r\n  let totalUnattempted = 0;\r\n  \r\n  questions.forEach(question => {\r\n    const section = question.section_id.split('_')[2].toLowerCase();\r\n    const answer = answers[question.question_number];\r\n    \r\n    if (!answer) {\r\n      totalUnattempted++;\r\n      sectionAnalysis[section as keyof typeof sectionAnalysis].unattempted++;\r\n    } else if (answer === question.correct_option) {\r\n      totalCorrect++;\r\n      sectionAnalysis[section as keyof typeof sectionAnalysis].correct++;\r\n      sectionAnalysis[section as keyof typeof sectionAnalysis].marks += 1;\r\n    } else {\r\n      totalWrong++;\r\n      sectionAnalysis[section as keyof typeof sectionAnalysis].wrong++;\r\n    }\r\n  });\r\n  \r\n  return {\r\n    section_wise_marks: {\r\n      maths: sectionAnalysis.maths.marks,\r\n      physics: sectionAnalysis.physics.marks,\r\n      chemistry: sectionAnalysis.chemistry.marks\r\n    },\r\n    total_marks: totalCorrect,\r\n    correct_answers: totalCorrect,\r\n    wrong_answers: totalWrong,\r\n    unattempted: totalUnattempted,\r\n    section_wise_analysis: sectionAnalysis\r\n  };\r\n}\r\n\r\nimport type { TestResult } from '@/types/test';\r\n\r\nasync function updateUserAnalytics(userId: string, result: TestResult) {\r\n  const supabase = createClient();\r\n  \r\n  // Get existing analytics\r\n  const { data: existingAnalytics } = await supabase\r\n    .from('user_analytics')\r\n    .select('*')\r\n    .eq('user_id', userId)\r\n    .single();\r\n    \r\n  if (!existingAnalytics) {\r\n    // Create new analytics\r\n    const newAnalytics = {\r\n      user_id: userId,\r\n      total_tests_taken: 1,\r\n      average_score: result.total_marks,\r\n      section_wise_average: {\r\n        maths: result.section_wise_marks.maths,\r\n        physics: result.section_wise_marks.physics,\r\n        chemistry: result.section_wise_marks.chemistry\r\n      },\r\n      improvement_trend: [{\r\n        date: result.submitted_at,\r\n        score: result.total_marks\r\n      }],\r\n      weak_areas: determineWeakAreas(result.section_wise_analysis),\r\n      strong_areas: determineStrongAreas(result.section_wise_analysis),\r\n      time_management: {\r\n        average_time_per_question: result.time_taken / 160, // 160 total questions\r\n        section_wise_time: {\r\n          maths: result.time_taken * 0.5, // Assuming 50% time for maths\r\n          physics: result.time_taken * 0.25,\r\n          chemistry: result.time_taken * 0.25\r\n        }\r\n      }\r\n    };\r\n    \r\n    await supabase\r\n      .from('user_analytics')\r\n      .insert(newAnalytics);\r\n  } else {\r\n    // Update existing analytics\r\n    const updatedAnalytics = {\r\n      total_tests_taken: existingAnalytics.total_tests_taken + 1,\r\n      average_score: (existingAnalytics.average_score * existingAnalytics.total_tests_taken + result.total_marks) / (existingAnalytics.total_tests_taken + 1),\r\n      section_wise_average: {\r\n        maths: (existingAnalytics.section_wise_average.maths * existingAnalytics.total_tests_taken + result.section_wise_marks.maths) / (existingAnalytics.total_tests_taken + 1),\r\n        physics: (existingAnalytics.section_wise_average.physics * existingAnalytics.total_tests_taken + result.section_wise_marks.physics) / (existingAnalytics.total_tests_taken + 1),\r\n        chemistry: (existingAnalytics.section_wise_average.chemistry * existingAnalytics.total_tests_taken + result.section_wise_marks.chemistry) / (existingAnalytics.total_tests_taken + 1)\r\n      },\r\n      improvement_trend: [...existingAnalytics.improvement_trend, {\r\n        date: result.submitted_at,\r\n        score: result.total_marks\r\n      }],\r\n      weak_areas: determineWeakAreas(result.section_wise_analysis),\r\n      strong_areas: determineStrongAreas(result.section_wise_analysis),\r\n      time_management: {\r\n        average_time_per_question: (existingAnalytics.time_management.average_time_per_question * existingAnalytics.total_tests_taken + result.time_taken / 160) / (existingAnalytics.total_tests_taken + 1),\r\n        section_wise_time: {\r\n          maths: (existingAnalytics.time_management.section_wise_time.maths * existingAnalytics.total_tests_taken + result.time_taken * 0.5) / (existingAnalytics.total_tests_taken + 1),\r\n          physics: (existingAnalytics.time_management.section_wise_time.physics * existingAnalytics.total_tests_taken + result.time_taken * 0.25) / (existingAnalytics.total_tests_taken + 1),\r\n          chemistry: (existingAnalytics.time_management.section_wise_time.chemistry * existingAnalytics.total_tests_taken + result.time_taken * 0.25) / (existingAnalytics.total_tests_taken + 1)\r\n        }\r\n      }\r\n    };\r\n    \r\n    await supabase\r\n      .from('user_analytics')\r\n      .update(updatedAnalytics)\r\n      .eq('user_id', userId);\r\n  }\r\n}\r\n\r\n// Define a type for section analysis to fix type errors\r\ntype SectionAnalysis = {\r\n  [section: string]: {\r\n    correct: number;\r\n    // You can add more fields if needed\r\n  };\r\n};\r\n\r\nfunction determineWeakAreas(sectionAnalysis: SectionAnalysis): string[] {\r\n  const weakAreas: string[] = [];\r\n  const sections = Object.entries(sectionAnalysis);\r\n\r\n  sections.forEach(([section, analysis]) => {\r\n    // Ensure analysis is the expected type\r\n    const totalQuestions = section === 'maths' ? 80 : 40;\r\n    const scorePercentage = (analysis.correct / totalQuestions) * 100;\r\n\r\n    if (scorePercentage < 50) {\r\n      weakAreas.push(section.charAt(0).toUpperCase() + section.slice(1));\r\n    }\r\n  });\r\n\r\n  return weakAreas;\r\n}\r\n\r\nfunction determineStrongAreas(sectionAnalysis: SectionAnalysis): string[] {\r\n  const strongAreas: string[] = [];\r\n  const sections = Object.entries(sectionAnalysis);\r\n\r\n  sections.forEach(([section, analysis]) => {\r\n    const totalQuestions = section === 'maths' ? 80 : 40;\r\n    const scorePercentage = (analysis.correct / totalQuestions) * 100;\r\n    \r\n    if (scorePercentage >= 75) {\r\n      strongAreas.push(section.charAt(0).toUpperCase() + section.slice(1));\r\n    }\r\n  });\r\n  \r\n  return strongAreas;\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/app/test/take/page.tsx"],"sourcesContent":["// Copyright 2025 varun\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     https://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\n\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Inter } from 'next/font/google';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport {\r\n  ArrowLeftIcon,\r\n  ArrowRightIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { TestData, TestProgress, Question } from '@/types/test';\r\nimport { getTestData, submitTest } from '@/utils/test';\r\n\r\n// For rendering LaTeX equations\r\nimport 'katex/dist/katex.min.css';\r\nimport { InlineMath, BlockMath } from 'react-katex';\r\n\r\nconst inter = Inter({ subsets: ['latin'] });\r\n\r\n// Add this helper function after the imports\r\nconst getActiveSectionFromQuestionNumber = (questionNumber: number): string => {\r\n  if (questionNumber >= 1 && questionNumber <= 80) return 'Maths';\r\n  if (questionNumber >= 81 && questionNumber <= 120) return 'Physics';\r\n  if (questionNumber >= 121 && questionNumber <= 160) return 'Chemistry';\r\n  return 'Maths'; // Default to Maths if out of range\r\n};\r\n\r\nexport default function TestPage() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const testId = parseInt(searchParams.get('testId') || '1', 10);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [testData, setTestData] = useState<TestData | null>(null);\r\n  const [userId, setUserId] = useState<string | null>(null);\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [progress, setProgress] = useState<TestProgress>({\r\n    currentQuestionId: 1,\r\n    activeSection: '',\r\n    answers: {},\r\n    markedForReview: [],\r\n    answeredAndMarkedForReview: [],\r\n    visitedQuestions: [1],\r\n    timeRemaining: 180 * 60, // 3 hours in seconds\r\n  });\r\n  \r\n  const [showInstructions, setShowInstructions] = useState(false);\r\n  \r\n  // Check authentication on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const response = await fetch('/api/auth/check-session');\r\n        const data = await response.json();\r\n\r\n        if (!data.authenticated) {\r\n          // Store current path before redirecting\r\n          localStorage.setItem('redirectPath', `/test/take?testId=${testId}`);\r\n          router.push('/auth/login');\r\n          return;\r\n        }\r\n\r\n        // Get user details\r\n        const userResponse = await fetch('/api/auth/user');\r\n        const userData = await userResponse.json();\r\n        setUserId(userData.id);\r\n        setUserName(userData.name || 'Student'); // Set user's name, fallback to 'Student' if not available\r\n      } catch (error) {\r\n        console.error('Auth error:', error);\r\n        setError('Authentication failed');\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, [router, testId]);\r\n  \r\n  // Timer functionality\r\n  useEffect(() => {\r\n    if (!testData) return;\r\n\r\n    const timer = setInterval(() => {\r\n      setProgress(prev => ({\r\n        ...prev,\r\n        timeRemaining: prev.timeRemaining - 1\r\n      }));\r\n      \r\n      if (progress.timeRemaining <= 0) {\r\n        clearInterval(timer);\r\n        // Handle time's up scenario - auto submit\r\n        handleSubmitTest();\r\n      }\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [progress.timeRemaining, testData]);\r\n  \r\n  // Format time as HH:MM:SS\r\n  const formatTime = (timeInSeconds: number) => {\r\n    const hours = Math.floor(timeInSeconds / 3600);\r\n    const minutes = Math.floor((timeInSeconds % 3600) / 60);\r\n    const seconds = timeInSeconds % 60;\r\n\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Current question data\r\n  const currentQuestion = testData?.questions.find(q => q.question_number === progress.currentQuestionId);\r\n  \r\n  // Navigation functions\r\n  const goToQuestion = (questionId: number) => {\r\n    if (!progress.visitedQuestions.includes(questionId)) {\r\n      setProgress(prev => ({\r\n        ...prev,\r\n        visitedQuestions: [...prev.visitedQuestions, questionId]\r\n      }));\r\n    }\r\n    \r\n    const newActiveSection = getActiveSectionFromQuestionNumber(questionId);\r\n    setProgress(prev => ({\r\n      ...prev,\r\n      currentQuestionId: questionId,\r\n      activeSection: newActiveSection\r\n    }));\r\n  };\r\n  \r\n  const goToNextQuestion = () => {\r\n    if (!testData) return;\r\n    const nextId = progress.currentQuestionId + 1;\r\n    if (nextId <= testData.questions.length) {\r\n      goToQuestion(nextId);\r\n    }\r\n  };\r\n  \r\n  const goToPrevQuestion = () => {\r\n    const prevId = progress.currentQuestionId - 1;\r\n    if (prevId >= 1) {\r\n      goToQuestion(prevId);\r\n    }\r\n  };\r\n  \r\n  // Answer handling\r\n  const handleSelectAnswer = (optionId: string) => {\r\n    setProgress(prev => ({\r\n      ...prev,\r\n      answers: {\r\n        ...prev.answers,\r\n        [progress.currentQuestionId]: optionId\r\n      },\r\n      answeredAndMarkedForReview: prev.markedForReview.includes(progress.currentQuestionId)\r\n        ? [...prev.answeredAndMarkedForReview.filter(id => id !== progress.currentQuestionId), progress.currentQuestionId]\r\n        : prev.answeredAndMarkedForReview,\r\n      markedForReview: prev.markedForReview.includes(progress.currentQuestionId)\r\n        ? prev.markedForReview.filter(id => id !== progress.currentQuestionId)\r\n        : prev.markedForReview\r\n    }));\r\n  };\r\n  \r\n  // Review marking\r\n  const handleMarkForReview = () => {\r\n    const questionId = progress.currentQuestionId;\r\n    const isAnswered = progress.answers[questionId] !== undefined;\r\n    \r\n    setProgress(prev => {\r\n      // If already marked for review, unmark it\r\n      if (prev.markedForReview.includes(questionId) || prev.answeredAndMarkedForReview.includes(questionId)) {\r\n        return {\r\n          ...prev,\r\n          markedForReview: prev.markedForReview.filter(id => id !== questionId),\r\n          answeredAndMarkedForReview: prev.answeredAndMarkedForReview.filter(id => id !== questionId)\r\n        };\r\n      }\r\n      \r\n      // Otherwise mark it based on whether it's answered\r\n      if (isAnswered) {\r\n        return {\r\n          ...prev,\r\n          answeredAndMarkedForReview: [...prev.answeredAndMarkedForReview, questionId],\r\n          markedForReview: prev.markedForReview.filter(id => id !== questionId)\r\n        };\r\n      } else {\r\n        return {\r\n          ...prev,\r\n          markedForReview: [...prev.markedForReview, questionId],\r\n          answeredAndMarkedForReview: prev.answeredAndMarkedForReview.filter(id => id !== questionId)\r\n        };\r\n      }\r\n    });\r\n    \r\n    goToNextQuestion();\r\n  };\r\n  \r\n  // Clear response\r\n  const handleClearResponse = () => {\r\n    setProgress(prev => ({\r\n      ...prev,\r\n      answers: {\r\n        ...prev.answers,\r\n        [progress.currentQuestionId]: null\r\n      },\r\n      answeredAndMarkedForReview: prev.answeredAndMarkedForReview.filter(\r\n        id => id !== progress.currentQuestionId\r\n      )\r\n    }));\r\n  };\r\n  \r\n  // Save and next\r\n  const handleSaveAndNext = () => {\r\n    goToNextQuestion();\r\n  };\r\n  \r\n  // Submit test\r\n  const handleSubmitTest = async () => {\r\n    try {\r\n      if (!userId) {\r\n        setError('Please log in to submit the test');\r\n        return;\r\n      }\r\n\r\n      // Show confirmation dialog\r\n      const confirmed = window.confirm('Are you sure you want to submit the test? This action cannot be undone.');\r\n      if (!confirmed) return;\r\n\r\n      // Calculate time taken\r\n      const timeTaken = 180 * 60 - progress.timeRemaining; // Convert to seconds\r\n\r\n      // Filter out null answers\r\n      const submittedAnswers = Object.entries(progress.answers).reduce((acc, [key, value]) => {\r\n        if (value !== null) {\r\n          acc[parseInt(key)] = value;\r\n        }\r\n        return acc;\r\n      }, {} as Record<number, string>);\r\n\r\n      // Submit test and get result\r\n      const result = await submitTest(\r\n        testId,\r\n        submittedAnswers,\r\n        timeTaken,\r\n        userId\r\n      );\r\n\r\n      // Navigate to results page with result ID\r\n      router.push(`/test/result?resultId=${result.result_id}`);\r\n    } catch (error) {\r\n      console.error('Error submitting test:', error);\r\n      alert('Failed to submit test. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Get question status class\r\n  const getQuestionStatusClass = (questionId: number) => {\r\n    if (progress.answeredAndMarkedForReview.includes(questionId)) {\r\n      return 'bg-yellow-500 text-white relative after:content-[\"✓\"] after:absolute after:text-green-800 after:text-xs after:right-1 after:top-0.5';\r\n    }\r\n    \r\n    if (progress.answers[questionId]) {\r\n      return 'bg-green-500 text-white';\r\n    }\r\n    \r\n    if (progress.markedForReview.includes(questionId)) {\r\n      return 'bg-yellow-500 text-white';\r\n    }\r\n    \r\n    if (progress.visitedQuestions.includes(questionId)) {\r\n      return 'bg-red-500 text-white';\r\n    }\r\n    \r\n    return 'bg-background border border-border';\r\n  };\r\n  \r\n  // Count stats\r\n  const attemptedCount = Object.values(progress.answers).filter(answer => answer !== null).length;\r\n  const notAnsweredCount = progress.visitedQuestions.length - attemptedCount;\r\n  const notVisitedCount = (testData?.questions.length || 0) - progress.visitedQuestions.length;\r\n  const markedCount = progress.markedForReview.length;\r\n  const answeredAndMarkedCount = progress.answeredAndMarkedForReview.length;\r\n  \r\n  // Get questions by section\r\n  const getQuestionsBySection = (sectionName: string): Question[] => {\r\n    if (!testData) return [];\r\n    return testData.questions.filter(q => {\r\n      const section = q.section_id.split('_')[2]; // Extract section name from section_id\r\n      return section.toLowerCase() === sectionName.toLowerCase();\r\n    });\r\n  };\r\n  \r\n  // Render LaTeX and HTML content\r\n  const renderContent = (content: string) => {\r\n    // This is a simplified approach - in a real app you'd need more robust parsing\r\n    const hasLatex = content.includes('$');\r\n    \r\n    // Create a temporary div to parse HTML and modify image sources\r\n    const tempDiv = document.createElement('div');\r\n    tempDiv.innerHTML = content;\r\n    \r\n    // Find all images and update their src if needed\r\n    const images = tempDiv.getElementsByTagName('img');\r\n    for (let i = 0; i < images.length; i++) {\r\n      const img = images[i];\r\n      const src = img.getAttribute('src');\r\n      if (src && !src.startsWith('http') && !src.startsWith('data:')) {\r\n        img.setAttribute('src', `https://testseries.edugorilla.com/${src.startsWith('/') ? src.slice(1) : src}`);\r\n      }\r\n    }\r\n    \r\n    const processedHtml = tempDiv.innerHTML;\r\n    \r\n    if (hasLatex) {\r\n      // Very basic LaTeX handling - actual implementation would be more sophisticated\r\n      return processedHtml.split('$').map((part, index) => {\r\n        if (index % 2 === 1) {\r\n          return <InlineMath key={index} math={part} />;\r\n        }\r\n        return <span key={index} dangerouslySetInnerHTML={{ __html: part }} />;\r\n      });\r\n    }\r\n    \r\n    return <span dangerouslySetInnerHTML={{ __html: processedHtml }} />;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchTestData() {\r\n      try {\r\n        const data = await getTestData(testId);\r\n        console.log('Test Data:', {\r\n          test: data.test,\r\n          sections: data.sections,\r\n          questions: data.questions,\r\n          instructions: data.instructions\r\n        });\r\n        setTestData(data);\r\n        setProgress(prev => ({\r\n          ...prev,\r\n          activeSection: data.sections[0].section_name\r\n        }));\r\n      } catch (err) {\r\n        setError('Failed to load test data. Please try again.');\r\n        console.error('Error fetching test data:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTestData();\r\n  }, [testId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-xl\">Loading test...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-xl text-red-600\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!testData) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-xl\">Test not found</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row min-h-screen w-full\">\r\n      {/* Sidebar: make collapsible/overlay on mobile */}\r\n      {isSidebarOpen && (\r\n        <aside className=\"fixed inset-0 z-50 bg-black bg-opacity-40 flex justify-end md:static md:bg-transparent md:w-64\">\r\n          <div className=\"w-4/5 max-w-xs bg-background border border-border h-full shadow-lg flex flex-col p-4 md:p-6\">\r\n            {/* Profile section with stats */}\r\n            <div className=\"bg-[#3B4B6B] text-white p-3 sm:p-4 rounded-lg mb-4\">\r\n              <div className=\"flex items-center gap-2 mb-3 sm:mb-4\">\r\n                <div className=\"w-8 h-8 rounded-full bg-blue-500/20 flex items-center justify-center\">\r\n                  <svg className=\"h-5 w-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"font-medium text-sm\">{userName}</span>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n                <div className=\"bg-[#2D3B59] rounded p-2\">\r\n                  <span className=\"text-green-400 font-bold mr-1\">{attemptedCount}</span>\r\n                  <span>Attempted</span>\r\n                </div>\r\n                <div className=\"bg-[#2D3B59] rounded p-2\">\r\n                  <span className=\"text-yellow-400 font-bold mr-1\">{markedCount}</span>\r\n                  <span>Marked</span>\r\n                </div>\r\n                <div className=\"bg-[#2D3B59] rounded p-2\">\r\n                  <span className=\"text-white font-bold mr-1\">{notVisitedCount}</span>\r\n                  <span>Not Visited</span>\r\n                </div>\r\n                <div className=\"bg-[#2D3B59] rounded p-2\">\r\n                  <span className=\"text-red-400 font-bold mr-1\">{notAnsweredCount}</span>\r\n                  <span>Not Answered</span>\r\n                </div>\r\n                <div className=\"bg-[#2D3B59] rounded p-2 col-span-2\">\r\n                  <span className=\"text-yellow-400 font-bold mr-1\">{answeredAndMarkedCount}</span>\r\n                  <span>Marked & Answered</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Section heading */}\r\n            <div className=\"mb-3 sm:mb-4\">\r\n              <h3 className=\"font-medium text-foreground text-xs sm:text-sm\">Section: <span className=\"text-blue-600\">{progress.activeSection}</span></h3>\r\n            </div>\r\n\r\n            {/* Question numbers grid */}\r\n            <div className=\"grid grid-cols-5 gap-1 sm:gap-2 mb-4\">\r\n              {getQuestionsBySection(progress.activeSection).map((question) => (\r\n                <button\r\n                  key={question.question_id}\r\n                  onClick={() => {\r\n                    goToQuestion(question.question_number);\r\n                    if (window.innerWidth < 768) {\r\n                      setIsSidebarOpen(false);\r\n                    }\r\n                  }}\r\n                  className={`w-full h-8 sm:h-9 flex items-center justify-center rounded text-xs sm:text-sm ${\r\n                    progress.currentQuestionId === question.question_number ? 'bg-red-500 text-white' : \r\n                    progress.answers[question.question_number] ? 'bg-green-500 text-white' :\r\n                    progress.markedForReview.includes(question.question_number) ? 'bg-yellow-400 text-white' :\r\n                    progress.answeredAndMarkedForReview.includes(question.question_number) ? 'bg-yellow-400 text-white relative after:content-[\"✓\"] after:absolute after:text-green-800 after:text-xs after:right-1 after:top-0.5' :\r\n                    progress.visitedQuestions.includes(question.question_number) ? 'bg-red-500 text-white' :\r\n                    'bg-background border border-border'\r\n                  }`}\r\n                >\r\n                  {question.question_number}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            <button className=\"self-end mb-6 md:hidden\" onClick={() => setIsSidebarOpen(false)}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </aside>\r\n      )}\r\n      {/* Main content: responsive paddings and stacking */}\r\n      <main className=\"flex-1 p-4 sm:p-6 flex flex-col\">\r\n        <header className=\"bg-background border-b border-border flex justify-between items-center py-2 px-4 sticky top-0 z-50\">\r\n          <div className=\"flex items-center\">\r\n            <span className=\"text-blue-600 font-bold text-lg ml-2\">eamcet<span className=\"text-foreground\">pro</span></span>\r\n            <span className=\"ml-4 text-md font-medium hidden md:inline\">{testData.test.test_name}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"bg-muted rounded-md px-2 sm:px-3 py-1\">\r\n              <span className=\"font-medium text-xs sm:text-sm md:text-base\">Time: {formatTime(progress.timeRemaining)}</span>\r\n            </div>\r\n            <button \r\n              onClick={() => setIsSidebarOpen(!isSidebarOpen)}\r\n              className=\"bg-blue-600 text-white p-2 rounded-md md:hidden\"\r\n            >\r\n              {isSidebarOpen ? (\r\n                <ChevronRightIcon className=\"h-5 w-5\" />\r\n              ) : (\r\n                <ChevronLeftIcon className=\"h-5 w-5\" />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"flex-1 flex relative\">\r\n          {/* Main test content */}\r\n          <div className=\"flex-1 p-2 sm:p-4 overflow-y-auto pb-20\">\r\n            <div className=\"flex mb-4 items-center\">\r\n              <div className=\"flex-1 overflow-x-auto\">\r\n                <div className=\"flex items-center whitespace-nowrap\">\r\n                  <span className=\"font-medium mr-2 text-xs sm:text-sm md:text-base\">Sections |</span>\r\n                  {testData.sections.map(section => (\r\n                    <button \r\n                      key={section.section_id}\r\n                      className={`px-2 py-1 mx-1 rounded text-xs sm:text-sm md:text-base ${\r\n                                              progress.activeSection === section.section_name \r\n                        ? 'bg-blue-600 text-white' \r\n                        : 'bg-muted'\r\n                      }`}\r\n                      onClick={() => {\r\n                        const firstQuestionNumber = section.section_name.toLowerCase() === 'maths' ? 1 :\r\n                          section.section_name.toLowerCase() === 'physics' ? 81 :\r\n                          section.section_name.toLowerCase() === 'chemistry' ? 121 : 1;\r\n                        goToQuestion(firstQuestionNumber);\r\n                      }}\r\n                    >\r\n                      {section.section_name}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-background border border-border rounded-lg shadow-sm p-3 sm:p-6 mb-4\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <div className=\"font-medium text-sm sm:text-base\">Question {progress.currentQuestionId}</div>\r\n                <div className=\"flex items-center space-x-2 sm:space-x-4\">\r\n                  <div>\r\n                    <span className=\"text-muted-foreground mr-1 text-xs sm:text-sm\">Time:</span>\r\n                    <span className=\"text-xs sm:text-sm\">00:{currentQuestion?.question_number.toString().padStart(2, '0')}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-6\">\r\n                <div className=\"text-base sm:text-lg mb-4\">\r\n                  {currentQuestion && renderContent(currentQuestion.question_text)}\r\n                </div>\r\n\r\n                <div className=\"space-y-2 sm:space-y-3 mt-4 sm:mt-6\">\r\n                  {currentQuestion && (\r\n                    <>\r\n                      <div className=\"flex items-start sm:items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"option-a\"\r\n                          name=\"answer\"\r\n                          checked={progress.answers[progress.currentQuestionId] === 'a'}\r\n                          onChange={() => handleSelectAnswer('a')}\r\n                          className=\"mt-1 sm:mt-0 mr-2 h-4 w-4\"\r\n                        />\r\n                        <label htmlFor=\"option-a\" className=\"flex-1 text-sm sm:text-base\">\r\n                          <span className=\"mr-2\">a.</span>\r\n                          {renderContent(currentQuestion.option_a)}\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"flex items-start sm:items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"option-b\"\r\n                          name=\"answer\"\r\n                          checked={progress.answers[progress.currentQuestionId] === 'b'}\r\n                          onChange={() => handleSelectAnswer('b')}\r\n                          className=\"mt-1 sm:mt-0 mr-2 h-4 w-4\"\r\n                        />\r\n                        <label htmlFor=\"option-b\" className=\"flex-1 text-sm sm:text-base\">\r\n                          <span className=\"mr-2\">b.</span>\r\n                          {renderContent(currentQuestion.option_b)}\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"flex items-start sm:items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"option-c\"\r\n                          name=\"answer\"\r\n                          checked={progress.answers[progress.currentQuestionId] === 'c'}\r\n                          onChange={() => handleSelectAnswer('c')}\r\n                          className=\"mt-1 sm:mt-0 mr-2 h-4 w-4\"\r\n                        />\r\n                        <label htmlFor=\"option-c\" className=\"flex-1 text-sm sm:text-base\">\r\n                          <span className=\"mr-2\">c.</span>\r\n                          {renderContent(currentQuestion.option_c)}\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"flex items-start sm:items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"option-d\"\r\n                          name=\"answer\"\r\n                          checked={progress.answers[progress.currentQuestionId] === 'd'}\r\n                          onChange={() => handleSelectAnswer('d')}\r\n                          className=\"mt-1 sm:mt-0 mr-2 h-4 w-4\"\r\n                        />\r\n                        <label htmlFor=\"option-d\" className=\"flex-1 text-sm sm:text-base\">\r\n                          <span className=\"mr-2\">d.</span>\r\n                          {renderContent(currentQuestion.option_d)}\r\n                        </label>\r\n                      </div>\r\n                      {currentQuestion.option_e && (\r\n                        <div className=\"flex items-start sm:items-center\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"option-e\"\r\n                            name=\"answer\"\r\n                            checked={progress.answers[progress.currentQuestionId] === 'e'}\r\n                            onChange={() => handleSelectAnswer('e')}\r\n                            className=\"mt-1 sm:mt-0 mr-2 h-4 w-4\"\r\n                          />\r\n                          <label htmlFor=\"option-e\" className=\"flex-1 text-sm sm:text-base\">\r\n                            <span className=\"mr-2\">e.</span>\r\n                            {renderContent(currentQuestion.option_e)}\r\n                          </label>\r\n                        </div>\r\n                      )}\r\n                      {currentQuestion.option_f && (\r\n                        <div className=\"flex items-start sm:items-center\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"option-f\"\r\n                            name=\"answer\"\r\n                            checked={progress.answers[progress.currentQuestionId] === 'f'}\r\n                            onChange={() => handleSelectAnswer('f')}\r\n                            className=\"mt-1 sm:mt-0 mr-2 h-4 w-4\"\r\n                          />\r\n                          <label htmlFor=\"option-f\" className=\"flex-1 text-sm sm:text-base\">\r\n                            <span className=\"mr-2\">f.</span>\r\n                            {renderContent(currentQuestion.option_f)}\r\n                          </label>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col sm:flex-row justify-between gap-2 sm:gap-0 mt-4 sm:mt-8\">\r\n                <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-3\">\r\n                  <button\r\n                    onClick={handleMarkForReview}\r\n                    className=\"bg-muted text-muted-foreground px-3 sm:px-4 py-2 rounded-md hover:bg-muted/80 transition text-sm\"\r\n                  >\r\n                    Mark for Review & Next\r\n                  </button>\r\n                  <button\r\n                    onClick={handleClearResponse}\r\n                    className=\"bg-muted text-muted-foreground px-3 sm:px-4 py-2 rounded-md hover:bg-muted/80 transition text-sm\"\r\n                  >\r\n                    Clear Response\r\n                  </button>\r\n                </div>\r\n                <button\r\n                  onClick={handleSaveAndNext}\r\n                  className=\"bg-green-600 text-white px-3 sm:px-4 py-2 rounded-md hover:bg-green-700 transition text-sm\"\r\n                >\r\n                  Save & Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between mt-2\">\r\n              <button\r\n                onClick={goToPrevQuestion}\r\n                disabled={progress.currentQuestionId === 1}\r\n                className={`flex items-center text-sm ${\r\n                  progress.currentQuestionId === 1 ? 'text-muted-foreground cursor-not-allowed' : 'text-blue-600 hover:text-blue-800'\r\n                }`}\r\n              >\r\n                <ArrowLeftIcon className=\"h-4 w-4 mr-1\" />\r\n                <span>Previous</span>\r\n              </button>\r\n              <button\r\n                onClick={goToNextQuestion}\r\n                disabled={progress.currentQuestionId === testData.questions.length}\r\n                className={`flex items-center text-sm ${\r\n                  progress.currentQuestionId === testData.questions.length ? 'text-muted-foreground cursor-not-allowed' : 'text-blue-600 hover:text-blue-800'\r\n                }`}\r\n              >\r\n                <span>Next</span>\r\n                <ArrowRightIcon className=\"h-4 w-4 ml-1\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}