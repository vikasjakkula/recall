{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/auth.ts"],"sourcesContent":["import { SignJWT, jwtVerify } from 'jose'\r\nimport { cookies } from 'next/headers'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key'\r\n\r\n// Cookie settings\r\nconst COOKIE_OPTIONS = {\r\n  httpOnly: true,\r\n  secure: process.env.NODE_ENV === 'production',\r\n  sameSite: 'lax' as const,\r\n  maxAge: 60 * 60 * 24 * 7 // 7 days\r\n}\r\n\r\nexport async function hashPassword(password: string): Promise<string> {\r\n  const salt = await bcrypt.genSalt(10)\r\n  return bcrypt.hash(password, salt)\r\n}\r\n\r\nexport async function comparePasswords(password: string, hashedPassword: string): Promise<boolean> {\r\n  return bcrypt.compare(password, hashedPassword)\r\n}\r\n\r\nexport async function createSession(userId: string): Promise<string> {\r\n  const token = await new SignJWT({ userId })\r\n    .setProtectedHeader({ alg: 'HS256' })\r\n    .setExpirationTime('7d') // Match cookie maxAge\r\n    .sign(new TextEncoder().encode(JWT_SECRET))\r\n  \r\n  return token\r\n}\r\n\r\nexport async function verifySession(token: string): Promise<string | null> {\r\n  try {\r\n    const verified = await jwtVerify(token, new TextEncoder().encode(JWT_SECRET))\r\n    return verified.payload.userId as string\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function setSessionCookie(token: string) {\r\n  const cookieStore = await cookies()\r\n  cookieStore.set('session', token, COOKIE_OPTIONS)\r\n}\r\n\r\nexport async function getSessionToken(): Promise<string | undefined> {\r\n  const cookieStore = await cookies()\r\n  return cookieStore.get('session')?.value\r\n}\r\n\r\nexport async function clearSession() {\r\n  const cookieStore = await cookies()\r\n  cookieStore.delete('session')\r\n}\r\n\r\nexport async function requireAuth() {\r\n  const token = await getSessionToken()\r\n  if (!token) {\r\n    throw new Error('Unauthorized')\r\n  }\r\n  \r\n  const userId = await verifySession(token)\r\n  if (!userId) {\r\n    throw new Error('Invalid session')\r\n  }\r\n  \r\n  return userId\r\n} "],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAE7C,kBAAkB;AAClB,MAAM,iBAAiB;IACrB,UAAU;IACV,QAAQ,oDAAyB;IACjC,UAAU;IACV,QAAQ,KAAK,KAAK,KAAK,EAAE,SAAS;AACpC;AAEO,eAAe,aAAa,QAAgB;IACjD,MAAM,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC;IAClC,OAAO,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;AAC/B;AAEO,eAAe,iBAAiB,QAAgB,EAAE,cAAsB;IAC7E,OAAO,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU;AAClC;AAEO,eAAe,cAAc,MAAc;IAChD,MAAM,QAAQ,MAAM,IAAI,uJAAA,CAAA,UAAO,CAAC;QAAE;IAAO,GACtC,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAClC,iBAAiB,CAAC,MAAM,sBAAsB;KAC9C,IAAI,CAAC,IAAI,cAAc,MAAM,CAAC;IAEjC,OAAO;AACT;AAEO,eAAe,cAAc,KAAa;IAC/C,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE,OAAO,IAAI,cAAc,MAAM,CAAC;QACjE,OAAO,SAAS,OAAO,CAAC,MAAM;IAChC,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,eAAe,iBAAiB,KAAa;IAClD,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,YAAY,GAAG,CAAC,WAAW,OAAO;AACpC;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,OAAO,YAAY,GAAG,CAAC,YAAY;AACrC;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,YAAY,MAAM,CAAC;AACrB;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM;IACpB,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,SAAS,MAAM,cAAc;IACnC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\nconst supabaseKey = process.env.SUPABASE_SERVICE_KEY!\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\nexport interface User {\r\n  id: string\r\n  name: string\r\n  college: string\r\n  email: string\r\n  phone: string\r\n  alt_phone?: string\r\n  password: string\r\n  created_at: string\r\n}\r\n\r\nexport async function createUser(userData: Omit<User, 'id' | 'created_at'>): Promise<User | null> {\r\n  const { data, error } = await supabase\r\n    .from('users')\r\n    .insert([userData])\r\n    .select()\r\n    .single()\r\n  \r\n  if (error) {\r\n    console.error('Error creating user:', error)\r\n    return null\r\n  }\r\n  \r\n  return data\r\n}\r\n\r\nexport async function getUserByPhone(phone: string): Promise<User | null> {\r\n  const { data, error } = await supabase\r\n    .from('users')\r\n    .select()\r\n    .eq('phone', phone)\r\n    .single()\r\n  \r\n  if (error) {\r\n    console.error('Error fetching user:', error)\r\n    return null\r\n  }\r\n  \r\n  return data\r\n}\r\n\r\nexport async function getUserById(id: string): Promise<User | null> {\r\n  const { data, error } = await supabase\r\n    .from('users')\r\n    .select()\r\n    .eq('id', id)\r\n    .single()\r\n  \r\n  if (error) {\r\n    console.error('Error fetching user:', error)\r\n    return null\r\n  }\r\n  \r\n  return data\r\n} "],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM;AACN,MAAM,cAAc,QAAQ,GAAG,CAAC,oBAAoB;AAE7C,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAa3C,eAAe,WAAW,QAAyC;IACxE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC;QAAC;KAAS,EACjB,MAAM,GACN,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;IAEA,OAAO;AACT;AAEO,eAAe,eAAe,KAAa;IAChD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,GACN,EAAE,CAAC,SAAS,OACZ,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;IAEA,OAAO;AACT;AAEO,eAAe,YAAY,EAAU;IAC1C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,GACN,EAAE,CAAC,MAAM,IACT,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/app/api/auth/login/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { comparePasswords, createSession, setSessionCookie } from '@/utils/auth'\r\nimport { getUserByPhone } from '@/utils/supabase'\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json()\r\n    const { phone, password } = body\r\n\r\n    if (!phone || !password) {\r\n      return NextResponse.json(\r\n        { error: 'Missing required fields' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // Get user by phone\r\n    const user = await getUserByPhone(phone)\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Invalid credentials' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    // Verify password\r\n    const isValid = await comparePasswords(password, user.password)\r\n    if (!isValid) {\r\n      return NextResponse.json(\r\n        { error: 'Invalid credentials' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    // Create session token\r\n    const token = await createSession(user.id)\r\n    \r\n    // Set session cookie\r\n    await setSessionCookie(token)\r\n\r\n    // Return success response\r\n    return NextResponse.json({ success: true })\r\n  } catch (error) {\r\n    console.error('Login error:', error)\r\n    return NextResponse.json(\r\n      { error: 'Login failed' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAE5B,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,oBAAoB;QACpB,MAAM,OAAO,MAAM,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE;QAClC,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,kBAAkB;QAClB,MAAM,UAAU,MAAM,CAAA,GAAA,+GAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU,KAAK,QAAQ;QAC9D,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,uBAAuB;QACvB,MAAM,QAAQ,MAAM,CAAA,GAAA,+GAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,EAAE;QAEzC,qBAAqB;QACrB,MAAM,CAAA,GAAA,+GAAA,CAAA,mBAAgB,AAAD,EAAE;QAEvB,0BAA0B;QAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAe,GACxB;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}