{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/utils/supabase/middleware.ts"],"sourcesContent":["import { createServerClient, type CookieOptions } from '@supabase/ssr'\r\nimport { type NextRequest, NextResponse } from 'next/server'\r\n\r\nexport const createClient = (request?: NextRequest) => {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\n  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\r\n\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n\r\n  return createServerClient(\r\n    supabaseUrl,\r\n    supabaseKey,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return request?.cookies.get(name)?.value\r\n        },\r\n        set(name: string, value: string, options: CookieOptions) {\r\n          // This will be used when implementing sign in/out\r\n          // We'll handle this when needed\r\n        },\r\n        remove(name: string, options: CookieOptions) {\r\n          // This will be used when implementing sign in/out\r\n          // We'll handle this when needed\r\n        },\r\n      },\r\n    }\r\n  )\r\n} "],"names":[],"mappings":";;;AAAA;AAAA;;AAGO,MAAM,eAAe,CAAC;IAC3B,MAAM;IACN,MAAM;IAEN,uCAAkC;;IAElC;IAEA,OAAO,CAAA,GAAA,iLAAA,CAAA,qBAAkB,AAAD,EACtB,aACA,aACA;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,SAAS,QAAQ,IAAI,OAAO;YACrC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;YACrD,kDAAkD;YAClD,gCAAgC;YAClC;YACA,QAAO,IAAY,EAAE,OAAsB;YACzC,kDAAkD;YAClD,gCAAgC;YAClC;QACF;IACF;AAEJ"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport type { NextRequest } from 'next/server'\r\nimport { createClient } from '@/utils/supabase/middleware'\r\nimport { jwtVerify } from 'jose'\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key'\r\n\r\n// Add paths that don't require authentication\r\nconst publicPaths = [\r\n  '/auth/login',\r\n  '/auth/register',\r\n  '/api/auth/login',\r\n  '/api/auth/register',\r\n  '/api/auth/verify-otp'\r\n]\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  const path = request.nextUrl.pathname\r\n\r\n  // Check if the path is public\r\n  if (publicPaths.some(p => path.startsWith(p))) {\r\n    return NextResponse.next()\r\n  }\r\n\r\n  // Check for static files and API routes that don't need auth\r\n  if (\r\n    path.startsWith('/_next') || // Static files\r\n    path.startsWith('/favicon.ico') ||\r\n    path === '/' // Homepage\r\n  ) {\r\n    return NextResponse.next()\r\n  }\r\n\r\n  // Check if path requires authentication\r\n  if (path.startsWith('/payment') || path.startsWith('/api/test/submit')) {\r\n    const token = request.cookies.get('session')?.value\r\n\r\n    if (!token) {\r\n      return NextResponse.redirect(new URL('/auth/login', request.url))\r\n    }\r\n\r\n    try {\r\n      await jwtVerify(token, new TextEncoder().encode(JWT_SECRET))\r\n    } catch (error) {\r\n      return NextResponse.redirect(new URL('/auth/login', request.url))\r\n    }\r\n  }\r\n\r\n  try {\r\n    // Get affiliate code from query parameter\r\n    const { searchParams } = new URL(request.url)\r\n    const affiliateCode = searchParams.get('ref')\r\n\r\n    // If no affiliate code, continue without modification\r\n    if (!affiliateCode) {\r\n      return NextResponse.next()\r\n    }\r\n\r\n    // Create a new supabase client\r\n    const supabase = createClient(request)\r\n\r\n    // Check if affiliate code is valid\r\n    const { data: affiliate } = await supabase\r\n      .from('affiliates')\r\n      .select('id')\r\n      .eq('affiliate_code', affiliateCode)\r\n      .eq('status', 'active')\r\n      .single()\r\n\r\n    if (!affiliate) {\r\n      return NextResponse.next()\r\n    }\r\n\r\n    // Get visitor's IP address from headers\r\n    const forwardedFor = request.headers.get('x-forwarded-for')\r\n    const visitorIp = forwardedFor ? forwardedFor.split(',')[0].trim() : 'unknown'\r\n\r\n    // Record the visit\r\n    await supabase\r\n      .from('affiliate_visits')\r\n      .insert({\r\n        affiliate_id: affiliate.id,\r\n        visitor_ip: visitorIp,\r\n        referrer: request.headers.get('referer') || null,\r\n        user_agent: request.headers.get('user-agent') || null,\r\n        utm_source: searchParams.get('utm_source') || null,\r\n        utm_medium: searchParams.get('utm_medium') || null,\r\n        utm_campaign: searchParams.get('utm_campaign') || null\r\n      })\r\n      .select()\r\n\r\n    // Create response and set affiliate cookie\r\n    const response = NextResponse.next()\r\n    \r\n    // Set affiliate cookie with 30-day expiry\r\n    response.cookies.set('affiliate_code', affiliateCode, {\r\n      httpOnly: true,\r\n      secure: process.env.NODE_ENV === 'production',\r\n      sameSite: 'lax',\r\n      maxAge: 60 * 60 * 24 * 30, // 30 days\r\n      path: '/'\r\n    })\r\n\r\n    return response\r\n  } catch (error) {\r\n    console.error('Error in affiliate tracking:', error)\r\n    return NextResponse.next()\r\n  }\r\n}\r\n\r\n// Only run middleware on homepage and payment routes\r\nexport const config = {\r\n  matcher: ['/', '/payment/:path*']\r\n} "],"names":[],"mappings":"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"}}]
}