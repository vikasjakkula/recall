{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/utils/supabase/client.ts"],"sourcesContent":["import { createClient as createSupabaseClient } from '@supabase/supabase-js'\r\n\r\nexport const createClient = () => {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\n  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\r\n\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n\r\n  return createSupabaseClient(supabaseUrl, supabaseKey)\r\n} "],"names":[],"mappings":";;;AAGsB;AAHtB;;AAEO,MAAM,eAAe;IAC1B,MAAM;IACN,MAAM;IAEN,uCAAkC;;IAElC;IAEA,OAAO,CAAA,GAAA,0LAAA,CAAA,eAAoB,AAAD,EAAE,aAAa;AAC3C","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/vikas/OneDrive/Desktop/Recal%21pro/app/recall/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { createClient } from \"../../utils/supabase/client\";\n\n// Developer-only toggle\nconst isDev = process.env.NEXT_PUBLIC_ENV === \"development\"; // Set NEXT_PUBLIC_ENV=development in .env.local for dev mode\n\n// Add types for Subject, Lesson, and LessonPdf\ninterface Subject {\n  id: string;\n  name: string;\n  icon?: string;\n}\ninterface Lesson {\n  id: string;\n  subject_id: string;\n  name: string;\n  position: number;\n}\ninterface LessonPdf {\n  id: string;\n  lesson_id: string;\n  pdf_url: string;\n}\n\n// Sidebar component with dropdowns for subjects and lessons\nfunction Sidebar({\n  subjects,\n  expandedSubjects,\n  toggleSubject,\n  expandedLesson,\n  toggleLesson,\n  lessons,\n  startEdit,\n  handleDelete,\n}: {\n  subjects: Subject[];\n  expandedSubjects: { [key: string]: boolean };\n  toggleSubject: (subject: Subject) => void;\n  expandedLesson: string | null;\n  toggleLesson: (lessonId: string) => void;\n  lessons: Lesson[];\n  startEdit: (type: 'subject' | 'lesson', item: any) => void;\n  handleDelete: (type: 'subject' | 'lesson', id: string, parentId?: string) => void;\n}) {\n  return (\n    <aside className=\"w-full sm:w-80 bg-white shadow-2xl border-r border-gray-100 px-4 sm:px-6 py-6 sm:py-8 overflow-y-auto flex flex-col min-h-screen\">\n      {/* Sidebar Header */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Study Dashboard</h1>\n        <p className=\"text-gray-600 text-sm\">Select a subject to begin learning</p>\n      </div>\n\n      {/* Subject Dropdowns */}\n      <div className=\"flex flex-col gap-3\">\n        {subjects.map((subject) => (\n          <div key={subject.id} className=\"border border-gray-200 rounded-xl overflow-hidden bg-gray-50/50\">\n            {/* Subject Button */}\n            <button\n              className={`w-full flex items-center justify-between px-6 py-4 transition-all duration-300 ${\n                expandedSubjects[subject.id]\n                  ? \"bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg\"\n                  : \"bg-white hover:bg-gray-50 text-gray-800 hover:shadow-md\"\n              }`}\n              onClick={() => toggleSubject(subject)}\n            >\n              <div className=\"flex items-center gap-3\">\n                <span className=\"font-semibold text-lg\">{subject.icon} {subject.name}</span>\n              </div>\n              <svg \n                className={`w-5 h-5 transition-transform duration-300 ${\n                  expandedSubjects[subject.id] ? 'rotate-180' : ''\n                }`}\n                fill=\"none\" \n                viewBox=\"0 0 24 24\" \n                stroke=\"currentColor\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n\n            {/* Lessons Dropdown */}\n            <AnimatePresence initial={false}>\n              {expandedSubjects[subject.id] && (\n                <motion.div\n                  className=\"bg-gray-50\"\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: \"auto\", opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  transition={{ duration: 0.3, ease: \"easeInOut\" }}\n                >\n                  <div className=\"px-4 py-2\">\n                    {lessons\n                      .filter((l) => l.subject_id === subject.id)\n                      .map((lesson) => (\n                        <button\n                          key={lesson.id}\n                          className={`w-full text-left px-4 py-3 rounded-lg transition-all duration-200 flex justify-between items-center mb-1 ${\n                            expandedLesson === lesson.id\n                              ? \"bg-blue-100 text-blue-800 border border-blue-200 font-medium\"\n                              : \"text-gray-700 hover:bg-white hover:text-gray-900 hover:shadow-sm\"\n                          }`}\n                          onClick={() => toggleLesson(lesson.id)}\n                        >\n                          <span className=\"flex items-center gap-2\">\n                            <div className={`w-2 h-2 rounded-full ${\n                              expandedLesson === lesson.id ? 'bg-blue-500' : 'bg-gray-400'\n                            }`}></div>\n                            {lesson.name}\n                          </span>\n                          {expandedLesson === lesson.id && (\n                            <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                            </svg>\n                          )}\n                        </button>\n                      ))}\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n            {isDev && (\n              <div className=\"flex gap-1 ml-2\">\n                <button onClick={() => startEdit('subject', subject)} className=\"text-xs text-blue-600 underline\">Edit</button>\n                <button onClick={() => handleDelete('subject', subject.id)} className=\"text-xs text-red-600 underline\">Delete</button>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Footer */}\n      <div className=\"mt-auto pt-6 border-t border-gray-200\">\n        <p className=\"text-xs text-gray-500 text-center\">\n          Study smart, achieve more\n        </p>\n      </div>\n    </aside>\n  );\n}\n\n// Right panel PDF view with enhanced design\nfunction LessonContent({\n  subject,\n  lesson,\n  pdfs,\n  startEdit,\n  handleDelete,\n}: {\n  subject: Subject | null;\n  lesson: Lesson | undefined;\n  pdfs: LessonPdf[];\n  startEdit: (type: 'pdf', item: any) => void;\n  handleDelete: (type: 'pdf', id: string, parentId?: string) => void;\n}) {\n  // Always fit to page: we show a \"Fit to Page\" button that is always visually \"on\" and do not provide any toggle.\n  // The iframe will always be styled to fit the page.\n  return (\n    <div className=\"flex-1 bg-gradient-to-br from-gray-50 to-blue-50 overflow-hidden p-4 sm:p-6 flex flex-col\">\n      <AnimatePresence mode=\"wait\">\n        {subject && lesson && pdfs.length > 0 ? (\n          <motion.div\n            key={lesson.id}\n            className=\"h-full flex flex-col p-6\"\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.95 }}\n            transition={{ duration: 0.4, ease: \"easeOut\" }}\n          >\n            {/* Header */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-gray-200 p-6 mb-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                    {subject.name}\n                  </h2>\n                  <p className=\"text-gray-600 flex items-center gap-2\">\n                    <svg className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                    </svg>\n                    Currently viewing: <span className=\"font-semibold text-blue-600\">{lesson.name}</span>\n                  </p>\n                </div>\n                <div className=\"flex gap-2\">\n                  <button className=\"px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors font-medium\">\n                    Download\n                  </button>\n                  <button className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors font-medium\">\n                    Print\n                  </button>\n                  {/* Fit to Page button always ON, not toggleable */}\n                  <button\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg font-medium cursor-default shadow\"\n                    disabled\n                    aria-pressed=\"true\"\n                    title=\"Fit to Page is always enabled\"\n                  >\n                    Fit to Page\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* PDF Viewer Container */}\n            <div className=\"flex-1 bg-white rounded-2xl shadow-lg border border-gray-200 overflow-hidden\">\n              <iframe\n                src={pdfs[0].pdf_url}\n                title=\"Lesson PDF\"\n                className=\"w-full h-full\"\n                style={{\n                  minHeight: 'calc(100vh - 220px)',\n                  border: 'none',\n                  background: '#ffffff',\n                  width: '100%',\n                  height: '100%',\n                }}\n              />\n            </div>\n            {isDev && pdfs.map(pdf => (\n              <div key={pdf.id} className=\"flex gap-2 mt-2\">\n                <button onClick={() => startEdit('pdf', pdf)} className=\"text-xs text-blue-600 underline\">Edit PDF</button>\n                <button onClick={() => handleDelete('pdf', pdf.id, lesson?.id)} className=\"text-xs text-red-600 underline\">Delete PDF</button>\n              </div>\n            ))}\n          </motion.div>\n        ) : (\n          <motion.div\n            key=\"empty\"\n            className=\"h-full flex flex-col items-center justify-center p-8\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.3 }}\n          >\n            <div className=\"bg-white rounded-3xl shadow-xl p-12 text-center max-w-md border border-gray-100\">\n              <div className=\"w-20 h-20 bg-gradient-to-br from-blue-100 to-indigo-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <svg\n                  className=\"w-10 h-10 text-blue-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1.5}\n                    d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n                  />\n                </svg>\n              </div>\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">\n                Ready to Learn?\n              </h3>\n              <p className=\"text-gray-600 mb-6 leading-relaxed\">\n                Select a subject from the sidebar and choose a lesson to start your learning journey.\n              </p>\n              <div className=\"flex items-center justify-center gap-2 text-sm text-gray-500\">\n                <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\"></div>\n                <span>Waiting for selection...</span>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\n// Main Study App\nexport default function StudyApp() {\n  const [subjects, setSubjects] = useState<Subject[]>([]);\n  const [lessons, setLessons] = useState<Lesson[]>([]);\n  const [pdfs, setPdfs] = useState<LessonPdf[]>([]);\n  const [expandedSubjects, setExpandedSubjects] = useState<{ [key: string]: boolean }>({});\n  const [expandedLesson, setExpandedLesson] = useState<string | null>(null);\n  const [activeSubject, setActiveSubject] = useState<Subject | null>(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalTab, setModalTab] = useState<'subject' | 'lesson' | 'pdf'>(\"subject\");\n  const [form, setForm] = useState<{\n    subjectName: string;\n    subjectIcon: string;\n    lessonName: string;\n    lessonPosition: number;\n    lessonSubjectId: string;\n    pdfLessonId: string;\n    pdfFile: File | null;\n  }>({\n    subjectName: \"\",\n    subjectIcon: \"\",\n    lessonName: \"\",\n    lessonPosition: 1,\n    lessonSubjectId: \"\",\n    pdfLessonId: \"\",\n    pdfFile: null,\n  });\n  const [successMessage, setSuccessMessage] = useState<string>(\"\");\n  const [editMode, setEditMode] = useState<null | { type: 'subject' | 'lesson' | 'pdf', id: string }>(null);\n  const [editForm, setEditForm] = useState<any>({});\n  const supabase = createClient();\n\n  // Fetch subjects on mount\n  useEffect(() => {\n    fetchSubjects();\n  }, []);\n\n  async function fetchSubjects() {\n    const { data, error } = await supabase.from(\"subjects\").select();\n    if (!error && data) setSubjects(data as Subject[]);\n  }\n\n  async function fetchLessons(subjectId: string) {\n    const { data, error } = await supabase\n      .from(\"lessons\")\n      .select()\n      .eq(\"subject_id\", subjectId)\n      .order(\"position\");\n    if (!error && data) setLessons(data as Lesson[]);\n  }\n\n  async function fetchPdfs(lessonId: string) {\n    const { data, error } = await supabase\n      .from(\"lesson_pdfs\")\n      .select()\n      .eq(\"lesson_id\", lessonId);\n    if (!error && data) setPdfs(data as LessonPdf[]);\n  }\n\n  // Toggle subject dropdown\n  const toggleSubject = (subject: Subject) => {\n    setExpandedSubjects((prev) => {\n      const newState = Object.keys(prev).reduce((acc, key) => ({ ...acc, [key]: false }), {} as { [key: string]: boolean });\n      return { ...newState, [subject.id]: !prev[subject.id] };\n    });\n    setActiveSubject(subject);\n    setExpandedLesson(null);\n    setLessons([]);\n    setPdfs([]);\n    fetchLessons(subject.id);\n  };\n\n  // Toggle lesson dropdown\n  const toggleLesson = (lessonId: string) => {\n    setExpandedLesson((prev) => (prev === lessonId ? null : lessonId));\n    setPdfs([]);\n    fetchPdfs(lessonId);\n  };\n\n  // Modal form handlers\n  function handleFormChange(e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n    const { name, value, files } = e.target as HTMLInputElement;\n    setForm((prev) => ({\n      ...prev,\n      [name]: files ? files[0] : value,\n    }));\n  }\n\n  async function handleAddSubject(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    await supabase.from(\"subjects\").insert({ name: form.subjectName, icon: form.subjectIcon });\n    setForm((f) => ({ ...f, subjectName: \"\", subjectIcon: \"\" }));\n    fetchSubjects();\n    setSuccessMessage(\"Subject added!\");\n    setTimeout(() => setSuccessMessage(\"\"), 2000);\n  }\n\n  async function handleAddLesson(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    await supabase.from(\"lessons\").insert({\n      subject_id: form.lessonSubjectId,\n      name: form.lessonName,\n      position: form.lessonPosition,\n    });\n    setForm((f) => ({ ...f, lessonName: \"\", lessonPosition: 1 }));\n    fetchLessons(form.lessonSubjectId);\n    setSuccessMessage(\"Lesson added!\");\n    setTimeout(() => setSuccessMessage(\"\"), 2000);\n  }\n\n  async function handleAddPdf(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    if (!form.pdfFile) return;\n    // Upload to Supabase Storage\n    const fileExt = form.pdfFile.name.split('.').pop();\n    const fileName = `${Date.now()}.${fileExt}`;\n    const { data: uploadData, error: uploadError } = await supabase.storage\n      .from(\"lesson-pdfs\")\n      .upload(fileName, form.pdfFile);\n    if (uploadError) return;\n    const { data: urlData } = supabase.storage.from(\"lesson-pdfs\").getPublicUrl(fileName);\n    // Save in DB\n    await supabase.from(\"lesson_pdfs\").insert({\n      lesson_id: form.pdfLessonId,\n      pdf_url: urlData.publicUrl,\n    });\n    setForm((f) => ({ ...f, pdfFile: null }));\n    fetchPdfs(form.pdfLessonId);\n    setSuccessMessage(\"PDF uploaded!\");\n    setTimeout(() => setSuccessMessage(\"\"), 2000);\n  }\n\n  function startEdit(type: 'subject' | 'lesson' | 'pdf', item: any) {\n    setEditMode({ type, id: item.id });\n    setEditForm({ ...item });\n  }\n\n  function handleEditFormChange(e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n    const { name, value, files } = e.target as HTMLInputElement;\n    setEditForm((prev: any) => ({\n      ...prev,\n      [name]: files ? files[0] : value,\n    }));\n  }\n\n  async function handleEditSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    if (!editMode) return;\n    if (editMode.type === 'subject') {\n      await supabase.from(\"subjects\").update({\n        name: editForm.name,\n        icon: editForm.icon\n      }).eq(\"id\", editMode.id);\n      fetchSubjects();\n      setSuccessMessage(\"Subject updated!\");\n    } else if (editMode.type === 'lesson') {\n      await supabase.from(\"lessons\").update({\n        name: editForm.name,\n        position: editForm.position,\n        subject_id: editForm.subject_id\n      }).eq(\"id\", editMode.id);\n      fetchLessons(editForm.subject_id);\n      setSuccessMessage(\"Lesson updated!\");\n    } else if (editMode.type === 'pdf') {\n      let pdf_url = editForm.pdf_url;\n      if (editForm.pdfFile) {\n        // Upload new file\n        const fileExt = editForm.pdfFile.name.split('.').pop();\n        const fileName = `${Date.now()}.${fileExt}`;\n        const { error: uploadError } = await supabase.storage\n          .from(\"lesson-pdfs\")\n          .upload(fileName, editForm.pdfFile);\n        if (!uploadError) {\n          const { data: urlData } = supabase.storage.from(\"lesson-pdfs\").getPublicUrl(fileName);\n          pdf_url = urlData.publicUrl;\n        }\n      }\n      await supabase.from(\"lesson_pdfs\").update({\n        pdf_url\n      }).eq(\"id\", editMode.id);\n      fetchPdfs(editForm.lesson_id);\n      setSuccessMessage(\"PDF updated!\");\n    }\n    setEditMode(null);\n    setTimeout(() => setSuccessMessage(\"\"), 2000);\n  }\n\n  async function handleDelete(type: 'subject' | 'lesson' | 'pdf', id: string, parentId?: string) {\n    if (type === 'subject') {\n      await supabase.from(\"subjects\").delete().eq(\"id\", id);\n      fetchSubjects();\n      setSuccessMessage(\"Subject deleted!\");\n    } else if (type === 'lesson') {\n      await supabase.from(\"lessons\").delete().eq(\"id\", id);\n      fetchLessons(parentId!);\n      setSuccessMessage(\"Lesson deleted!\");\n    } else if (type === 'pdf') {\n      await supabase.from(\"lesson_pdfs\").delete().eq(\"id\", id);\n      fetchPdfs(parentId!);\n      setSuccessMessage(\"PDF deleted!\");\n    }\n    setTimeout(() => setSuccessMessage(\"\"), 2000);\n  }\n\n  return (\n    <div className=\"flex flex-col sm:flex-row min-h-screen w-full font-inter bg-gray-50 overflow-hidden\">\n      {/* Sidebar with subjects and lessons */}\n      <Sidebar\n        subjects={subjects}\n        expandedSubjects={expandedSubjects}\n        toggleSubject={toggleSubject}\n        expandedLesson={expandedLesson}\n        toggleLesson={toggleLesson}\n        lessons={lessons}\n        startEdit={startEdit}\n        handleDelete={handleDelete}\n      />\n      \n      {/* Main content area */}\n      <LessonContent\n        subject={activeSubject}\n        lesson={lessons.find((l) => l.id === expandedLesson)}\n        pdfs={pdfs}\n        startEdit={startEdit}\n        handleDelete={handleDelete}\n      />\n      {/* Developer-only Add Button */}\n      {isDev && (\n        <button\n          className=\"fixed bottom-8 right-8 bg-blue-600 text-white px-6 py-3 rounded-full shadow-lg z-50 hover:bg-blue-700\"\n          onClick={() => setShowModal(true)}\n        >\n          + Add\n        </button>\n      )}\n      {/* Modal for adding subject/lesson/pdf */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black/40 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-2xl p-8 w-full max-w-md shadow-xl\">\n            <div className=\"flex gap-4 mb-6\">\n              <button className={`px-4 py-2 rounded ${modalTab === \"subject\" ? \"bg-blue-100 text-blue-700\" : \"bg-gray-100\"}`} onClick={() => setModalTab(\"subject\")}>Add Subject</button>\n              <button className={`px-4 py-2 rounded ${modalTab === \"lesson\" ? \"bg-blue-100 text-blue-700\" : \"bg-gray-100\"}`} onClick={() => setModalTab(\"lesson\")}>Add Lesson</button>\n              <button className={`px-4 py-2 rounded ${modalTab === \"pdf\" ? \"bg-blue-100 text-blue-700\" : \"bg-gray-100\"}`} onClick={() => setModalTab(\"pdf\")}>Add PDF</button>\n            </div>\n            {modalTab === \"subject\" && (\n              <form onSubmit={handleAddSubject} className=\"flex flex-col gap-4\">\n                <input name=\"subjectName\" value={form.subjectName} onChange={handleFormChange} placeholder=\"Subject Name\" className=\"border p-2 rounded text-black placeholder:text-black\" required />\n                <input name=\"subjectIcon\" value={form.subjectIcon} onChange={handleFormChange} placeholder=\"Icon (emoji or SVG)\" className=\"border p-2 rounded text-black placeholder:text-black\" />\n                <button type=\"submit\" className=\"bg-blue-600 text-black py-2 rounded font-semibold\">Add Subject</button>\n                {successMessage && <div className=\"text-green-600 text-center mt-2\">{successMessage}</div>}\n              </form>\n            )}\n            {modalTab === \"lesson\" && (\n              <form onSubmit={handleAddLesson} className=\"flex flex-col gap-4\">\n                <select name=\"lessonSubjectId\" value={form.lessonSubjectId} onChange={handleFormChange} className=\"border p-2 rounded text-black\" required>\n                  <option value=\"\">Select Subject</option>\n                  {subjects.map((s) => <option key={s.id} value={s.id}>{s.name}</option>)}\n                </select>\n                <input name=\"lessonName\" value={form.lessonName} onChange={handleFormChange} placeholder=\"Lesson Name\" className=\"border p-2 rounded text-black placeholder:text-black\" required />\n                <input name=\"lessonPosition\" type=\"number\" value={form.lessonPosition} onChange={handleFormChange} placeholder=\"Position\" className=\"border p-2 rounded text-black placeholder:text-black\" min={1} />\n                <button type=\"submit\" className=\"bg-blue-600 text-black py-2 rounded font-semibold\">Add Lesson</button>\n                {successMessage && <div className=\"text-green-600 text-center mt-2\">{successMessage}</div>}\n              </form>\n            )}\n            {modalTab === \"pdf\" && (\n              <form onSubmit={handleAddPdf} className=\"flex flex-col gap-4\">\n                <select name=\"pdfLessonId\" value={form.pdfLessonId} onChange={handleFormChange} className=\"border p-2 rounded text-black\" required>\n                  <option value=\"\">Select Lesson</option>\n                  {lessons.map((l) => <option key={l.id} value={l.id}>{l.name}</option>)}\n                </select>\n                <input name=\"pdfFile\" type=\"file\" accept=\"application/pdf\" onChange={handleFormChange} className=\"border p-2 rounded text-black file:text-black\" required />\n                <button type=\"submit\" className=\"bg-blue-600 text-black py-2 rounded font-semibold\">Upload PDF</button>\n                {successMessage && <div className=\"text-green-600 text-center mt-2\">{successMessage}</div>}\n              </form>\n            )}\n            <button className=\"mt-6 text-gray-500 underline\" onClick={() => setShowModal(false)}>Close</button>\n          </div>\n        </div>\n      )}\n      {editMode && (\n        <div className=\"fixed inset-0 bg-black/40 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-2xl p-8 w-full max-w-md shadow-xl\">\n            <form onSubmit={handleEditSubmit} className=\"flex flex-col gap-4\">\n              {editMode.type === 'subject' && (\n                <>\n                  <input name=\"name\" value={editForm.name} onChange={handleEditFormChange} className=\"border p-2 rounded text-black\" required />\n                  <input name=\"icon\" value={editForm.icon} onChange={handleEditFormChange} className=\"border p-2 rounded text-black\" />\n                </>\n              )}\n              {editMode.type === 'lesson' && (\n                <>\n                  <input name=\"name\" value={editForm.name} onChange={handleEditFormChange} className=\"border p-2 rounded text-black\" required />\n                  <input name=\"position\" type=\"number\" value={editForm.position} onChange={handleEditFormChange} className=\"border p-2 rounded text-black\" min={1} />\n                  <select name=\"subject_id\" value={editForm.subject_id} onChange={handleEditFormChange} className=\"border p-2 rounded text-black\" required>\n                    {subjects.map((s) => <option key={s.id} value={s.id}>{s.name}</option>)}\n                  </select>\n                </>\n              )}\n              {editMode.type === 'pdf' && (\n                <>\n                  <input name=\"pdf_url\" value={editForm.pdf_url} onChange={handleEditFormChange} className=\"border p-2 rounded text-black\" required />\n                  <input name=\"pdfFile\" type=\"file\" accept=\"application/pdf\" onChange={handleEditFormChange} className=\"border p-2 rounded text-black file:text-black\" />\n                </>\n              )}\n              <button type=\"submit\" className=\"bg-blue-600 text-black py-2 rounded font-semibold\">Save</button>\n              <button type=\"button\" className=\"text-gray-500 underline\" onClick={() => setEditMode(null)}>Cancel</button>\n              {successMessage && <div className=\"text-green-600 text-center mt-2\">{successMessage}</div>}\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}